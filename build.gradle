plugins {
    id("com.github.johnrengelman.shadow") version "7.1.2"
    id("io.micronaut.application") version "3.7.4"
}

version = "0.1"
group = "example.micronaut"

repositories {
    mavenCentral()
}

dependencies {
    annotationProcessor("io.micronaut.data:micronaut-data-processor")
    annotationProcessor("org.projectlombok:lombok")

    implementation("io.micronaut.aws:micronaut-aws-apigateway")
    implementation("io.micronaut:micronaut-jackson-databind")
    implementation("jakarta.annotation:jakarta.annotation-api")
    implementation("io.micronaut.sql:micronaut-jdbc-hikari")
    implementation("io.micronaut.data:micronaut-data-hibernate-jpa")
    implementation("io.micronaut:micronaut-validation")
    implementation("io.micronaut.liquibase:micronaut-liquibase")

    runtimeOnly("org.mariadb.jdbc:mariadb-java-client")
    runtimeOnly("ch.qos.logback:logback-classic")

    compileOnly("org.projectlombok:lombok")
    compileOnly("org.graalvm.nativeimage:svm")
    compileOnly("io.micronaut.crac:micronaut-crac")

    testImplementation("io.micronaut:micronaut-http-client")

}


application {
    mainClass.set("example.micronaut.Application")
}
java {
    sourceCompatibility = JavaVersion.toVersion("11")
    targetCompatibility = JavaVersion.toVersion("11")
}

graalvmNative.toolchainDetection = false
micronaut {
    runtime("lambda_provided")
    testRuntime("junit5")
    processing {
        incremental(true)
        annotations("example.micronaut.*")
    }
}


tasks.named("dockerfileNative") {
    baseImage('ghcr.io/graalvm/native-image:ol7-java11-22.3.0')
    args(
        "-XX:MaximumHeapSizePercent=80",
        "-Dio.netty.allocator.numDirectArenas=0",
        "-Dio.netty.noPreferDirect=true"
    )
}



